spring:
  application:
    name: app1
  jpa:
    open-in-view: false
    database: POSTGRESQL
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        #        jdbc:
        #          batch_size: 100
        query:
          in_clause_parameter_padding: true
        temp:
          use_jdbc_metadata_defaults: false
    generate-ddl: false
  datasource:
    name: cloudexample1
    url: jdbc:postgresql://127.0.0.1:5432/${spring.datasource.name}
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true

  flyway:
    baseline-on-migrate: true
    out-of-order: true


  security:
    oauth2:
      client:
        registration:
          articles-client-oidc:
            provider: spring
            client-id: gateway
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8081/login/oauth2/code/{registrationId}"
            scope: openid
            client-name: articles-client-oidc
          articles-client-authorization-code:
            provider: spring
            client-id: gateway
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8081/authorized"
            scope: articles.read
            client-name: articles-client-authorization-code
        provider:
          spring:
            issuer-uri: http://localhost:9000

server:
  port: 8081
